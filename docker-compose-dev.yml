version: '3.4'
services:
  db:
    image: mariadb:10.3
    env_file:
      - docker/env/mysql.env
    volumes:
      - database_volume:/var/lib/mysql
    ports:
      - 3306
  redis:
    image: redis
    ports:
      - 6379

  passbolt:
    build:
      context: .
    depends_on:
      - db
    env_file:
      - docker/env/passbolt.env
    volumes:
      - images_volume:/var/www/passbolt/webroot/img/public/images
      - ${PWD}/config/gpg/unsecure.key:/var/www/passbolt/config/gpg/serverkey.key
      - ${PWD}/config/gpg/unsecure_private.key:/var/www/passbolt/config/gpg/serverkey_private.key
      - ${PWD}/docker/conf/ssl/server.crt:/etc/ssl/certs/passbolt/server.crt
      - ${PWD}/docker/conf/ssl/server-key.pem:/etc/ssl/certs/passbolt/server-key.pem
      - ${PWD}/docker/scripts/wait-for.sh:/usr/bin/wait-for.sh
      - ${PWD}/config/app.default.php:/var/www/passbolt/config/app.php
      - ${PWD}/docker/conf/passbolt.php:/var/www/passbolt/config/passbolt.php
    command:
      - /bin/bash
      - -c
      - |
        /usr/bin/wait-for.sh db:3306 -- mysql -h db -u root -ptest -e "create database if not exists email_queue;" \
        mysql -h db -u root -ptest -e "grant all on email_queue.* to passbolt@'%' identified by 'P4ssb0lt';"
        mysql -h db -u root -ptest -e "grant all on *.* to passbolt@'%' identified by 'P4ssb0lt';"
        su -c "./bin/cake migrations migrate -p Passbolt/MultiTenantAdmin" -s /bin/bash www-data
        su -c "./bin/cake migrations migrate -p EmailQueue --connection emailQueue" -s /bin/bash www-data
        su -c "./bin/cake multi_tenant migrate_organizations" -s /bin/bash www-data
        su -c "./bin/cake multi_tenant add_organization --name=acme" -s /bin/bash www-data
        echo "================================================================"
        su -c "./bin/cake passbolt register_user --org=acme -f Wile -l Coyote -r admin -u coyote@cloud.passbolt.local" -s /bin/bash www-data
        echo "================================================================"
        /docker-entrypoint.sh
    ports:
      - 80:80
      - 443:443

volumes:
  database_volume:
  images_volume:
