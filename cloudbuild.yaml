substitutions:
  _DEPLOYMENT_REPO: passbolt/charts-passbolt-cloud
  _CHARTS_PRODUCTION_BRANCH: master
  _CHARTS_STAGING_BRANCH: develop
  _CODE_PRODUCTION_BRANCH: production
  _RETRIES: "5"
  _BUCKET_STAGING_NAME: cloudbuild-confige079506e
  _BUCKET_PRODUCTION_NAME: cloudbuild-configfdb9ca2c
  _KMS_LOCATION: europe-west1
  _KMS_KEYRING: cloud-ring-00
  _KMS_KEY: cloud-key-00
  _IMAGE_NAME: passbolt-cloud

steps:
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--tag=gcr.io/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA'
      - '--tag=gcr.io/$PROJECT_ID/$_IMAGE_NAME:$BUILD_ID'
      - '.'

  - name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "$_CODE_PRODUCTION_BRANCH" ]]; then
          gsutil cp gs://$_BUCKET_PRODUCTION_NAME/bb-config.enc /config/bb-config.enc
          gsutil cp gs://$_BUCKET_PRODUCTION_NAME/bb-ssh-key.enc /config/bb-ssh-key.enc
        else
          gsutil cp gs://$_BUCKET_STAGING_NAME/bb-config.enc /config/bb-config.enc
          gsutil cp gs://$_BUCKET_STAGING_NAME/bb-ssh-key.enc /config/bb-ssh-key.enc
        fi
    volumes:
      - name: 'config'
        path: /config

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        base64 -d /config/bb-config.enc | gcloud kms decrypt \
          --location $_KMS_LOCATION \
          --project $PROJECT_ID \
          --keyring $_KMS_KEYRING \
          --key $_KMS_KEY \
          --plaintext-file /config/bb-config \
          --ciphertext-file - \
        && base64 -d /config/bb-ssh-key.enc | gcloud kms decrypt \
          --location $_KMS_LOCATION \
          --project $PROJECT_ID \
          --keyring $_KMS_KEYRING \
          --key $_KMS_KEY \
          --plaintext-file /config/bb-ssh-key \
          --ciphertext-file -
    volumes:
      - name: 'config'
        path: /config

  - name: 'debian:stable-slim'
    entrypoint: 'bash'
    env:
      - 'BUILD_ID=$BUILD_ID'
      - 'SHORT_SHA=$SHORT_SHA'
    args:
      - '-c'
      - |
        apt-get update \
        && apt-get install -y --no-install-recommends \
          git \
          curl \
          jq \
          ca-certificates \
          openssh-client \
          python \
          python-yaml \
        && mkdir -p /root/.ssh \
        && echo "bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==" >> /root/.ssh/known_hosts \
        && cp /config/bb-ssh-key /root/.ssh/id_rsa \
        && chmod 600 /root/.ssh/id_rsa \
        && git clone git@bitbucket.org:$_DEPLOYMENT_REPO /chart \
        && cd /chart
        if [[ "$BRANCH_NAME" == "$_CODE_PRODUCTION_BRANCH" ]]; then
          git checkout -b feature/$BUILD_ID origin/$_CHARTS_PRODUCTION_BRANCH
          export DEPLOY_ENV=production
        else
          git checkout $_CHARTS_STAGING_BRANCH
          export DEPLOY_ENV=staging
        fi
        python << END
        import yaml, os
        deploy_env = os.environ.get('DEPLOY_ENV')
        file_path = 'values_{env}.yaml'.format(env=deploy_env)
        with open(file_path, 'r') as f:
            values = yaml.safe_load(f)
        if 'SHORT_SHA' in os.environ:
            values['cloudApi']['image']['tag'] = os.environ.get('SHORT_SHA')
        else:
            values['cloudApi']['image']['tag'] = os.environ.get('BUILD_ID')
        with open(file_path, 'w') as f:
            yaml.dump(values, f, default_flow_style=False)
        END
        git config --global user.email sysops@passbolt.com \
        && git add . \
        && git config --global user.name "Passbolt cloud build bot" \
        && git commit -m ":robot_face: Updated image tag BUILD: $BUILD_ID"
        if [[ "$BRANCH_NAME" == "$_CODE_PRODUCTION_BRANCH" ]]; then
          git push origin feature/$BUILD_ID \
          && curl --retry "$_RETRIES" -X POST -H "Content-Type: application/json" \
             --netrc-file /config/bb-config \
             https://bitbucket.org/api/2.0/repositories/$_DEPLOYMENT_REPO/pullrequests -d @- <<EOF |
          {
           "title": "Deployment to $_CHARTS_PRODUCTION_BRANCH",
           "description": "Build deployment: $BUILD_ID",
           "source": {
               "branch": { "name": "feature/$BUILD_ID" },
               "repository": { "full_name": "$_DEPLOYMENT_REPO" }
             },
           "destination": { "branch": { "name": "$_CHARTS_PRODUCTION_BRANCH" } },
           "close_source_branch": true
          }
        EOF
          jq -er \
            'if (.type == "pullrequest") and (.state == "OPEN") then
              "PR Submitted"
            else
              error("Something went wrong")
            end'
        else
          git push origin $_CHARTS_STAGING_BRANCH
        fi
    volumes:
      - name: 'config'
        path: /config

images:
  - 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:$BUILD_ID'
